# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2023-08-12T06:43:45+00:00

from __future__ import annotations

from typing import Any, Dict, Optional

from pydantic import BaseModel, Field


class GenerateRequest(BaseModel):
    user_input: Optional[str] = Field(None, description='User input')


class GenerateResponse(BaseModel):
    generated_code: Optional[str] = Field(None, description='Generated code')


class ExecCodeRequest(BaseModel):
    code: Optional[str] = Field(None, description='Python code')


class ExecCodeResponse(BaseModel):
    output: Optional[str] = Field(None, description='Output of the code')
    message_type: Optional[str] = Field(None, description='Type of the message')


class UploadFileResponse(BaseModel):
    file_name: Optional[str] = Field(None, description='Uploaded file name')
    blob_url: Optional[str] = Field(None, description='Uploaded file URL')
    financial_data: Optional[Dict[str, Any]] = Field(None, description='Financial data')
